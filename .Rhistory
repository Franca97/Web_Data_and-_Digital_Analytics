remove(list = ls())
install.packages("readxl") #Instaled this package to read in excel
install.packages("janitor") #Installed this package to clean NULL values
library("janitor")
library("readxl")
library("igraph")
getwd(). #Make sure that you have the file you need in the Working directory or you apply a proper pathway
getwd() #Make sure that you have the file you need in the Working directory or you apply a proper pathway
D1 <- read_excel("ProjectDoc.xls")
D1 <- data.frame(D1) #Changed the excel file into a data frame
Routes1 <- data.frame(D1$source.airport,D1$destination.apirport) #This is all the airport conections
Routes2 <- data.frame(D1$source.country,D1$destination.country) #This is all the country connections with domestic flights being changed to values of NULL
Routes1
DM1 <-as.matrix(Routes1) #Changed from data frame to matrix to work with igraph
DM2 <-as.matrix(Routes2)
str(D1)
View(D1)
Routes1
str(Routes1)
str(DM1)
DM2
NewDM2<-remove_empty(DM2, which = c("rows", "cols"), quiet = TRUE)
NewDM2
n1 <- graph.edgelist(DM1,directed = TRUE)
n2 <- graph.edgelist(NewDM2,directed = TRUE)
plot(n2)
n2
?graph.adjacency
DM1
#n1 <- graph.edgelist(DM1,directed = TRUE)
#n2 <- graph.edgelist(NewDM2,directed = TRUE)
n1 <- graph.adjacency(DM1,mode="directed",weighted=FALSE)
#n1 <- graph.edgelist(DM1,directed = TRUE)
#n2 <- graph.edgelist(NewDM2,directed = TRUE)
n1 <- graph.adjacency(DM1,mode="directed",weighted=NULL)
n2 <- graph.adjacency(NewDM2,mode="directed",weighted=TRUE)
n1 <- graph.edgelist(DM1,directed = TRUE)
n2 <- graph.edgelist(NewDM2,directed = TRUE)
get.adjacency(n2)
#Network Visualization
plot(n2,layout=layout_with_fr,vertex.size=10,vertex.label.cex=.5,edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
#Network Visualization
windows() #Open in a new window
plot(n2,layout=layout_with_fr,vertex.size=10,vertex.label.cex=.5,edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
plot(n2,layout=layout_with_fr,vertex.color="white",vertex.size=6,vertex.label.color="black",vertex.label.cex=.5,edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
plot(n2,layout=layout_with_fr,vertex.color="white",vertex.size=6,vertex.label.color="black",vertex.label.cex=.5,edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
?plot
plot(n2,layout=layout_with_fr,vertex.color="white",vertex.size=6,vertex.label.color="black",vertex.label.cex=.5,edge.width=weight(n2)*7,edge.arrow.size=0.5,edge.arrow.width=0.5)
#Network Visualization
windows() #Open in a new window
plot(n2,layout=layout_with_fr,vertex.color="white",vertex.size=6,vertex.label.color="black",vertex.label.cex=.5,edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
vcount(n2)
ecount(n2)
#Graph Density
graph.density(n2)
average.path.length(n2)
transitivity(n2, type="global")
#Degree Centrality
degree(n2, mode="in")
?degree
degree(n2, mode="out")
?betweenness
#Betweenness Centrality
betweenness(n2, directed=T, weights=NA)
edge_betweenness(n2, directed=T, weights=NA)
?hub_score
#Hubs
hub_score(n2, weights=T)
#Hubs
hub_score(n2, weights=NA)
#Hubs
hs <- hub_score(n2, weights=NA)$vector
hs
plot(n2,layout=layout_with_fr,vertex.color="white",
vertex.size=hs*25,vertex.label.color="black",vertex.label.cex=.5,
edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
which(hs==max(hs))
?sort
sort(hs, decreasing=T)
hubs <- sort(hs, decreasing=T)
head(hubs)
?head
head(hubs, n=10)
#Degree Centrality
ind <- degree(n2, mode="in")$vector
#Degree Centrality
ind <- degree(n2, mode="in")
indlist <- sort(ind, decreasing=T)
head(indlist, n=10)
head(outdlist,n=10)
outd <- degree(n2, mode="out")$vector
outd <- degree(n2, mode="out")
outdlist <- sort(outd, decreasing=T)
head(outdlist,n=10)
#Degree Centrality
ind <- degree(n2, mode="in")
ind <- sort(ind, decreasing=T)
head(ind,n=10)
outd <- degree(n2, mode="out")
outd <- sort(outd, decreasing=T)
head(outd,n=10)
#Betweenness Centrality
betw <- betweenness(n2, directed=T, weights=NA)
betw <- sort(betw, decreasing=T)
head(betw, n=10)
ebetw <- sort(ebetw, decreasing=T)
ebetw <- edge_betweenness(n2, directed=T, weights=NA)
ebetw <- sort(ebetw, decreasing=T)
head(ebetw, n=10)
#Hubs
hubs <- hub_score(n2, weights=NA)$vector
hubs <- sort(hs, decreasing=T)
head(hubs, n=10)
plot(n2,layout=layout_with_fr,vertex.color="white",
vertex.size=hubs*25,vertex.label.color="black",vertex.label.cex=.5,
edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
#Network Visualization
windows() #Open in a new window
plot(n2,layout=layout_with_fr,vertex.color="white",
vertex.size=6,vertex.label.color="black",vertex.label.cex=.5,
edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
windows()
plot(n2,layout=layout_with_fr,vertex.color="white",
vertex.size=ind*25,vertex.label.color="black",vertex.label.cex=.5,
edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
plot(n2,layout=layout_with_fr,vertex.color="white",
vertex.size=ind*2,vertex.label.color="black",vertex.label.cex=.5,
edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
windows()
plot(n2,layout=layout_with_fr,vertex.color="white",
vertex.size=hubs*25,vertex.label.color="black",vertex.label.cex=.5,
edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
plot(n2,layout=layout_with_fr,vertex.color="white",
vertex.size=hubs*12,vertex.label.color="black",vertex.label.cex=.5,
edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
windows()
plot(n2,layout=layout_with_fr,vertex.color="white",
vertex.size=hubs*12,vertex.label.color="black",vertex.label.cex=.5,
edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
table <- cbind(ind,outd,betw,hubs)
table
head(ind)
head(outd)
head(betw, n=20)
head(ind,n=15)
head(outd, n=15)
outd$label
outd
?write.csv
write.csv(n2, file="countries.csv")
write.graph(n2,file="countries.csv")
write.graph(n2,file="countries.xml")
write.table(newDM2,file="countries.xml")
write.table(NewDM2,file="countries.css")
write.table(NewDM2,file="countries.csv")
head(DM2)
write.csv(NewDM2,file="countries.csv",rownames=F)
write.csv(NewDM2,file="countries.csv",row.names=F)
write.csv(NewDM2,file="countries.csv",column.names=F,row.names=F)
write.csv(NewDM2,file="countries.csv",col.names=F,row.names=F)
write.csv(NewDM2,file="countries.csv",col.names=F,row.names=F)
write.csv(NewDM2,file="countries.csv",row.names=F)
install.packages("writexl")
library("writexl")
write_xlsx(betw,"betweenness.xlsx")
write_xlsx(betw,file="betweenness.xlsx")
?write_xlsx
betw<-as.data.frame(betw)
write_xlsx(betw,"betweenness.xlsx")
head(betw)
write_xlsx(betw,"betweenness.xlsx",row.names=T)
install.packages("xlsx")
library("xlsx")
write.xlsx(betw, "betweenness.xlsx")
?write_xlsx
betw<-as.data.frame(betw)
write.csv(betw,file="betweenness.csv")
betw
betw <- as.matrix(betw)
betw
write.csv(betw,file="betweenness.csv")
write_xlsx(betw,file="betweenness.xlsx")
write_xlsx(betw,"betweenness.xlsx")
betw <- as.data.frame(betw)
betw
write_xlsx(betw,"betweenness.xlsx")
betw <- data.frame(country=betw$row.name,betweenness=betw)
betw <- data.frame(betweenness=betw)
betw
betw$row.name
betw$row.names
betw$rows.name
row.names(betw)
write_xlsx(row.names(betw),"betweenness.xlsx")
betw <- as.data.frame(betw)
row.names(betw)
write_xlsx(row.names(betw),"betweenness.xlsx")
countrybetw <- row.names(betw)
write_xlsx(countrybetw,"betweenness.xlsx")
countrybetw <- as.data.frame(countrybetw)
write_xlsx(countrybetw,"betweenness.xlsx")
#Degree Centrality
ind <- degree(n2, mode="in")
ind <- sort(ind, decreasing=T)
ind <- as.data.frame(ind)
countryind <- row.names(ind)
outd <- degree(n2, mode="out")
outd <- sort(outd, decreasing=T)
outd <- as.data.frame(outd)
countryoutd <- row.names(outd)
#Betweenness Centrality
betw <- betweenness(n2, directed=T, weights=NA)
betw <- sort(betw, decreasing=T)
betw <- as.data.frame(betw)
countrybetw <- row.names(betw)
#Hubs
hubs <- hub_score(n2, weights=NA)$vector
hubs <- sort(hs, decreasing=T)
hubs <- as.data.frame(hubs)
countryhubs <- row.names(hubs)
windows()
plot(n2,layout=layout_with_fr,vertex.color="white",
vertex.size=hubs*12,vertex.label.color="black",vertex.label.cex=.5,
edge.width=0.7,edge.arrow.size=0.5,edge.arrow.width=0.5)
#Export data to use it
write.csv(NewDM2,file="countries.csv",row.names=F) #To use in Gephi
table <- cbind(countryind,countryoutd,countrybetw,countryhubs)
table
table <- as.data.frame(table)
write_xlsx(countrylist,"countrylist.xlsx")
write_xlsx(table,"countrylist.xlsx")
colnames(table) <- c("Highest In-degree","Highest Out-degree", "Highest betweenness", "Highest Hub")
table <- as.data.frame(table)
write_xlsx(table,"countrylist.xlsx")
table
colnames(table) <- c("Highest In-degree","Highest Out-degree", "Highest betweenness", "Highest Hub")
table <- as.data.frame(table)
write_xlsx(table,"countrylist.xlsx",col_names=T)
table <- cbind(countryind,ind,countryoutd,outd,countrybetw,betw,countryhubs,hubs)
colnames(table) <- c("Highest In-degree","ind","Highest Out-degree","outd", "Highest betweenness","betw", "Highest Hub","hub")
table <- as.data.frame(table)
write_xlsx(table,"countrylist.xlsx",col_names=T)
write_xlsx(table,"countrylist.xlsx",col_names=T)
betw
hubs
print(hubs)
head(hubs)
head(ind)
remove(list = ls())
library("janitor")
library("readxl")
library("writexl")
library("igraph")
getwd() #Make sure that you have the file you need in the Working directory or you apply a proper pathway
D1 <- read_excel("ProjectDoc.xls")
D1 <- data.frame(D1) #Changed the excel file into a data frame
Routes1 <- data.frame(D1$source.airport,D1$destination.apirport) #This is all the airport connections
Routes2 <- data.frame(D1$source.country,D1$destination.country) #This is all the country connections with domestic flights being changed to values of NULL
DM1 <- as.matrix(Routes1) #Changed from data frame to matrix to work with igraph
DM2 <- as.matrix(Routes2)
DM2 <- remove_empty(DM2, which = c("rows", "cols"), quiet = TRUE)
#Network visualization in Gephi
#CSV files to directly use in Gephi
#Problem with the header that I cannot get rid of
write.csv(DM1,file="airports.csv",row.names=F)
write.csv(DM2,file="countries.csv",row.names=F)
n1 <- graph.edgelist(DM1,directed = TRUE)
n2 <- graph.edgelist(DM2,directed = TRUE)
#Graph Density
density <- graph.density(n2)
density
apl <- average.path.length(n2)
apl
#Degree Centrality
ind <- degree(n2, mode="in")
ind <- sort(ind, decreasing=T)
ind <- as.data.frame(ind)
countryind <- row.names(ind)
outd <- degree(n2, mode="out")
outd <- sort(outd, decreasing=T)
outd <- as.data.frame(outd)
countryoutd <- row.names(outd)
#Betweenness Centrality
betw <- betweenness(n2, directed=T, weights=NA)
betw <- sort(betw, decreasing=T)
betw <- as.data.frame(betw)
countrybetw <- row.names(betw)
#Hubs
hubs <- hub_score(n2, weights=NA)$vector
hubs <- sort(hs, decreasing=T)
hubs <- as.data.frame(hubs)
countryhubs <- row.names(hubs)
#Hubs
hubs <- hub_score(n2, weights=NA)$vector
hubs <- sort(hubs, decreasing=T)
hubs <- as.data.frame(hubs)
countryhubs <- row.names(hubs)
#Export data to Excel to make comparisons
table <- cbind(countryind,ind,countryoutd,outd,countrybetw,betw,countryhubs,hubs)
colnames(table) <- c("Highest In-degree","ind","Highest Out-degree","outd", "Highest betweenness","betw", "Highest Hub","hub")
table <- as.data.frame(table)
write_xlsx(table,"countrylist.xlsx",col_names=T)
